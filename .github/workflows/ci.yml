name: CI

on: [push, pull_request]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Update Java SDK for SonarQube
      uses: actions/setup-java@v1
      with:
        java-version: '17'
    - name: Setup .NET versions
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          6.0.x
          8.0.x
        include-prerelease: true
    - name: Dump .NET info
      run: dotnet --info
    - name: Restore dotnet tools
      run: dotnet tool restore
    - name: Prepare sonarqube
      if: ${{ github.actor != 'dependabot[bot]' }}
      env:
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      run: dotnet sonarscanner begin -d:sonar.host.url=https://sonarcloud.io -organization:testablehttpclient -key:testablehttpclient_TestableHttpClient -version:`dotnet nbgv get-version --variable NuGetPackageVersion` -d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml -d:sonar.login=${{env.SONAR_TOKEN}}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build source code
      run: dotnet build --configuration Release --no-restore
    - name: Test with dotnet
      run: dotnet test --configuration Release --no-build --collect="Code Coverage" --framework="net6.0"
    - name: Upload sonarqube results
      if: ${{ github.actor != 'dependabot[bot]' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      run: dotnet sonarscanner end -d:sonar.login=${{env.SONAR_TOKEN}}
    - name: Check source file format
      run: dotnet format --no-restore --verify-no-changes
    - name: Pack
      run: dotnet pack --output ./artifacts --configuration Release --no-build
    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: ./artifacts
    - uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: ./**/TestResults/**/coverage.opencover.xml

  testOnSupportedDotnetVersions:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - name: Setup .NET versions
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          6.0.x
          8.0.x
        include-prerelease: true
    - name: Dump .NET info
      run: dotnet --info
    - name: Restore dependencies
      run: dotnet restore
    - name: Build source code
      run: dotnet build --configuration Release --no-restore
    - name: Test with dotnet
      run: dotnet test --configuration Release --no-build

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET versions
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          8.0.x
        include-prerelease: true
    - uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: ./artifacts
    - name: Publish packages
      env:
        NUGET_TOKEN: ${{secrets.NUGET_TOKEN}}
      run: dotnet nuget push './artifacts/**/*.nupkg' --source https://api.nuget.org/v3/index.json --api-key ${{env.NUGET_TOKEN}}
