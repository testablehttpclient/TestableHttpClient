#nullable enable
TestableHttpClient.TestableHttpMessageHandler
TestableHttpClient.TestableHttpMessageHandler.ClearRequests() -> void
TestableHttpClient.TestableHttpMessageHandler.Options.get -> TestableHttpClient.TestableHttpMessageHandlerOptions!
TestableHttpClient.TestableHttpMessageHandler.Requests.get -> System.Collections.Generic.IEnumerable<System.Net.Http.HttpRequestMessage!>!
TestableHttpClient.TestableHttpMessageHandler.RespondWith(TestableHttpClient.IResponse! response) -> void
TestableHttpClient.TestableHttpMessageHandler.TestableHttpMessageHandler() -> void
override TestableHttpClient.TestableHttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage! request, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage!>!

TestableHttpClient.TestableHttpMessageHandlerOptions
TestableHttpClient.TestableHttpMessageHandlerOptions.JsonSerializerOptions.get -> System.Text.Json.JsonSerializerOptions!
TestableHttpClient.TestableHttpMessageHandlerOptions.TestableHttpMessageHandlerOptions() -> void
TestableHttpClient.TestableHttpMessageHandlerOptions.UriPatternMatchingOptions.get -> TestableHttpClient.UriPatternMatchingOptions!

TestableHttpClient.UriPatternMatchingOptions
TestableHttpClient.UriPatternMatchingOptions.DefaultQueryFormat.get -> System.UriFormat
TestableHttpClient.UriPatternMatchingOptions.DefaultQueryFormat.set -> void
TestableHttpClient.UriPatternMatchingOptions.HostCaseInsensitive.get -> bool
TestableHttpClient.UriPatternMatchingOptions.HostCaseInsensitive.set -> void
TestableHttpClient.UriPatternMatchingOptions.PathCaseInsensitive.get -> bool
TestableHttpClient.UriPatternMatchingOptions.PathCaseInsensitive.set -> void
TestableHttpClient.UriPatternMatchingOptions.QueryCaseInsensitive.get -> bool
TestableHttpClient.UriPatternMatchingOptions.QueryCaseInsensitive.set -> void
TestableHttpClient.UriPatternMatchingOptions.SchemeCaseInsensitive.get -> bool
TestableHttpClient.UriPatternMatchingOptions.SchemeCaseInsensitive.set -> void
TestableHttpClient.UriPatternMatchingOptions.UriPatternMatchingOptions() -> void

TestableHttpClient.IRoutingResponseBuilder
TestableHttpClient.IRoutingResponseBuilder.Map(string! route, TestableHttpClient.IResponse! response) -> void
TestableHttpClient.IRoutingResponseBuilder.MapFallBackResponse(TestableHttpClient.IResponse! fallBackResponse) -> void

TestableHttpClient.IResponse
TestableHttpClient.IResponse.ExecuteAsync(TestableHttpClient.HttpResponseContext! context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
TestableHttpClient.IResponsesExtensions
TestableHttpClient.Responses
static TestableHttpClient.Responses.Configured(TestableHttpClient.IResponse! response, System.Action<System.Net.Http.HttpResponseMessage!>! configureResponse) -> TestableHttpClient.IResponse!
static TestableHttpClient.Responses.Delayed(TestableHttpClient.IResponse! delayedResponse, int delayInMilliseconds) -> TestableHttpClient.IResponse!
static TestableHttpClient.Responses.Delayed(TestableHttpClient.IResponse! delayedResponse, System.TimeSpan delay) -> TestableHttpClient.IResponse!
static TestableHttpClient.Responses.Extensions.get -> TestableHttpClient.IResponsesExtensions!
static TestableHttpClient.Responses.Json(object? content, string? contentType = null, System.Text.Json.JsonSerializerOptions? jsonSerializerOptions = null) -> TestableHttpClient.IResponse!
static TestableHttpClient.Responses.Json(object? content, System.Net.HttpStatusCode statusCode, string? contentType = null, System.Text.Json.JsonSerializerOptions? jsonSerializerOptions = null) -> TestableHttpClient.IResponse!
static TestableHttpClient.Responses.Route(System.Action<TestableHttpClient.IRoutingResponseBuilder!>! builder) -> TestableHttpClient.IResponse!
static TestableHttpClient.Responses.SelectResponse(System.Func<TestableHttpClient.HttpResponseContext!, TestableHttpClient.IResponse!>! selector) -> TestableHttpClient.IResponse!
static TestableHttpClient.Responses.Sequenced(params TestableHttpClient.IResponse![]! responses) -> TestableHttpClient.IResponse!
static TestableHttpClient.Responses.StatusCode(System.Net.HttpStatusCode statusCode) -> TestableHttpClient.IResponse!
static TestableHttpClient.Responses.Text(string! content, System.Text.Encoding? encoding = null, string? mediaType = null) -> TestableHttpClient.IResponse!
static TestableHttpClient.Responses.Timeout() -> TestableHttpClient.IResponse!

TestableHttpClient.HttpResponseContext
TestableHttpClient.HttpResponseContext.HttpRequestMessage.get -> System.Net.Http.HttpRequestMessage!
TestableHttpClient.HttpResponseContext.HttpRequestMessages.get -> System.Collections.Generic.IReadOnlyCollection<System.Net.Http.HttpRequestMessage!>!
TestableHttpClient.HttpResponseContext.HttpResponseMessage.get -> System.Net.Http.HttpResponseMessage!
TestableHttpClient.HttpResponseContext.Options.get -> TestableHttpClient.TestableHttpMessageHandlerOptions!

TestableHttpClient.TestableHttpMessageHandlerExtensions
static TestableHttpClient.TestableHttpMessageHandlerExtensions.CreateClient(this TestableHttpClient.TestableHttpMessageHandler! handler, params System.Net.Http.DelegatingHandler![]! httpMessageHandlers) -> System.Net.Http.HttpClient!
static TestableHttpClient.TestableHttpMessageHandlerExtensions.CreateClient(this TestableHttpClient.TestableHttpMessageHandler! handler, System.Action<System.Net.Http.HttpClient!>! configureClient) -> System.Net.Http.HttpClient!
static TestableHttpClient.TestableHttpMessageHandlerExtensions.CreateClient(this TestableHttpClient.TestableHttpMessageHandler! handler, System.Action<System.Net.Http.HttpClient!>! configureClient, System.Collections.Generic.IEnumerable<System.Net.Http.DelegatingHandler!>! httpMessageHandlers) -> System.Net.Http.HttpClient!

TestableHttpClient.TestableHttpMessageHandlerAssertionExtensions
static TestableHttpClient.TestableHttpMessageHandlerAssertionExtensions.ShouldHaveMadeRequests(this TestableHttpClient.TestableHttpMessageHandler! handler) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.TestableHttpMessageHandlerAssertionExtensions.ShouldHaveMadeRequests(this TestableHttpClient.TestableHttpMessageHandler! handler, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.TestableHttpMessageHandlerAssertionExtensions.ShouldHaveMadeRequestsTo(this TestableHttpClient.TestableHttpMessageHandler! handler, string! pattern) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.TestableHttpMessageHandlerAssertionExtensions.ShouldHaveMadeRequestsTo(this TestableHttpClient.TestableHttpMessageHandler! handler, string! pattern, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!

TestableHttpClient.IHttpRequestMessagesCheck
TestableHttpClient.IHttpRequestMessagesCheck.Options.get -> TestableHttpClient.TestableHttpMessageHandlerOptions!
TestableHttpClient.IHttpRequestMessagesCheck.WithFilter(System.Func<System.Net.Http.HttpRequestMessage!, bool>! requestFilter, int expectedNumberOfRequests, string! condition) -> TestableHttpClient.IHttpRequestMessagesCheck!
TestableHttpClient.IHttpRequestMessagesCheck.WithFilter(System.Func<System.Net.Http.HttpRequestMessage!, bool>! requestFilter, int? expectedNumberOfRequests, string! condition) -> TestableHttpClient.IHttpRequestMessagesCheck!
TestableHttpClient.IHttpRequestMessagesCheck.WithFilter(System.Func<System.Net.Http.HttpRequestMessage!, bool>! requestFilter, string! condition) -> TestableHttpClient.IHttpRequestMessagesCheck!

TestableHttpClient.HttpRequestMessageAssertionException
TestableHttpClient.HttpRequestMessageAssertionException.HttpRequestMessageAssertionException() -> void
TestableHttpClient.HttpRequestMessageAssertionException.HttpRequestMessageAssertionException(string! message) -> void
TestableHttpClient.HttpRequestMessageAssertionException.HttpRequestMessageAssertionException(string! message, System.Exception! innerException) -> void

TestableHttpClient.HttpRequestMessagesCheckExtensions
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithContent(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! pattern) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithContent(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! pattern, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithContentHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithContentHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithContentHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName, string! headerValue) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithContentHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName, string! headerValue, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithFormUrlEncodedContent(this TestableHttpClient.IHttpRequestMessagesCheck! check, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string?, string?>>! nameValueCollection) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithFormUrlEncodedContent(this TestableHttpClient.IHttpRequestMessagesCheck! check, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string?, string?>>! nameValueCollection, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName, string! headerValue) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName, string! headerValue, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithHttpMethod(this TestableHttpClient.IHttpRequestMessagesCheck! check, System.Net.Http.HttpMethod! httpMethod) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithHttpMethod(this TestableHttpClient.IHttpRequestMessagesCheck! check, System.Net.Http.HttpMethod! httpMethod, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithHttpVersion(this TestableHttpClient.IHttpRequestMessagesCheck! check, System.Version! httpVersion) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithHttpVersion(this TestableHttpClient.IHttpRequestMessagesCheck! check, System.Version! httpVersion, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithJsonContent(this TestableHttpClient.IHttpRequestMessagesCheck! check, object? jsonObject) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithJsonContent(this TestableHttpClient.IHttpRequestMessagesCheck! check, object? jsonObject, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithJsonContent(this TestableHttpClient.IHttpRequestMessagesCheck! check, object? jsonObject, System.Text.Json.JsonSerializerOptions! jsonSerializerOptions) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithJsonContent(this TestableHttpClient.IHttpRequestMessagesCheck! check, object? jsonObject, System.Text.Json.JsonSerializerOptions! jsonSerializerOptions, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithRequestHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithRequestHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithRequestHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName, string! headerValue) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithRequestHeader(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! headerName, string! headerValue, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithRequestUri(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! pattern) -> TestableHttpClient.IHttpRequestMessagesCheck!
static TestableHttpClient.HttpRequestMessagesCheckExtensions.WithRequestUri(this TestableHttpClient.IHttpRequestMessagesCheck! check, string! pattern, int expectedNumberOfRequests) -> TestableHttpClient.IHttpRequestMessagesCheck!

TestableHttpClient.Utils.UriPatternParserException
TestableHttpClient.Utils.UriPatternParserException.UriPatternParserException() -> void
TestableHttpClient.Utils.UriPatternParserException.UriPatternParserException(string! message) -> void
TestableHttpClient.Utils.UriPatternParserException.UriPatternParserException(string! message, System.Exception! innerException) -> void
